{
  "swagger": "2.0",
  "info": {
    "title": "nft/nft.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Nft"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/nft": {
      "post": {
        "summary": "Upload resulted nft offchain from b64\npossble statuses: Pending, UploadedOffchain, Uploaded",
        "operationId": "UpdateNFTOffchainUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftNFTMintRequestWithStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nftUpdateNFTOffchainUrlRequest"
            }
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/burn": {
      "post": {
        "summary": "Burn remove nft from contract and set shipping info and set status Burned\npossble statuses: Uploaded",
        "operationId": "Burn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nftBurnRequest"
            }
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/burn/track": {
      "post": {
        "summary": "SetTrackingNumber set tracking number for burned nft and set status Shipped \npossble statuses: Burned",
        "operationId": "SetTrackingNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nftSetTrackingNumberRequest"
            }
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/ipfs": {
      "post": {
        "summary": "UploadIPFSMetadata - upload metadata from given id to IPFS and add uri to db",
        "operationId": "UploadIPFSMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nftUploadIPFSMetadataRequest"
            }
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/metadata": {
      "get": {
        "summary": "GetAllMetadata Get all uploaded _metadata.json records from S3 with timestamps",
        "operationId": "GetAllMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftAllMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/offchain": {
      "post": {
        "summary": "UploadOffchainMetadata Get all mint requests with status StatusUploaded, StatusUploadedOffchain, StatusBurned, StatusShipped. \nCreate _metadata.json and upload to S3",
        "operationId": "UploadOffchainMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftMetadataOffchainUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/requests": {
      "post": {
        "summary": "Method used in ui for submitting drawing nft reference with initial status Unknown",
        "operationId": "NewNFTMintRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftNFTMintRequestWithStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nftNFTMintRequestToUpload"
            }
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/requests/{id}": {
      "delete": {
        "summary": "Delete mint requests by internal id",
        "operationId": "DeleteNFTMintRequestById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftDeleteStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "internal id in db",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/requests/{status}/{page}": {
      "get": {
        "summary": "List paged mint requests by status. Default page size is 30.",
        "operationId": "ListNFTMintRequestsPaged",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftNFTMintRequestListArray"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "description": "Mint request status",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Any",
              "Unknown",
              "Pending",
              "Failed",
              "UploadedOffchain",
              "Uploaded",
              "Burned",
              "Shipped"
            ]
          },
          {
            "name": "page",
            "description": "page number",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    },
    "/api/nft/{id}": {
      "delete": {
        "summary": "Remove nft offchain url from mint request and change status to Pending",
        "operationId": "DeleteNFTOffchainUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nftNFTMintRequestWithStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "internal id in db",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Nft"
        ]
      }
    }
  },
  "definitions": {
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "nftAllMetadataResponse": {
      "type": "object",
      "properties": {
        "offchainUrls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nftMetadataOffchainUrl"
          }
        }
      },
      "title": "Response for GetAllMetadata"
    },
    "nftBurnRequest": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "mintSequenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "shipping": {
          "$ref": "#/definitions/nftShippingTo"
        }
      },
      "title": "Burn"
    },
    "nftDeleteStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "error message"
        }
      },
      "title": "response for deleteing status"
    },
    "nftImageList": {
      "type": "object",
      "properties": {
        "fullSize": {
          "type": "string",
          "title": "link to fullsized image"
        },
        "compressed": {
          "type": "string",
          "title": "link to compressed image"
        }
      },
      "title": "Links to images"
    },
    "nftImageToUpload": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "title": "base64 encoded image if it starts from \"http://\" or  \"https://\" will be stored as link if not will be uploaded to s3"
        }
      },
      "title": "B64 raw image or link"
    },
    "nftMetadataOffchainUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "all metadata json url uploaded to s3 will be used to upload to ipfs"
        },
        "ipfsUrl": {
          "type": "string",
          "title": "URL ipfs"
        },
        "ts": {
          "type": "integer",
          "format": "int32",
          "title": "timestamp of creation"
        },
        "processing": {
          "type": "boolean",
          "title": "is uploaded"
        }
      },
      "title": "Upload offchain metadata _metadata.json"
    },
    "nftNFTMintRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "internal id in db"
        },
        "ethAddress": {
          "type": "string",
          "title": "eth address of minter account"
        },
        "TxHash": {
          "type": "string",
          "title": "hash of mint transaction"
        },
        "mintSequenceNumber": {
          "type": "integer",
          "format": "int32",
          "title": "sequence number of minted nft"
        },
        "description": {
          "type": "string",
          "title": "user defined description of drawing"
        }
      },
      "title": "Mint request info"
    },
    "nftNFTMintRequestListArray": {
      "type": "object",
      "properties": {
        "nftMintRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nftNFTMintRequestWithStatus"
          },
          "title": "uploaded mint request with status"
        }
      },
      "title": "List of all submitted mint requests"
    },
    "nftNFTMintRequestToUpload": {
      "type": "object",
      "properties": {
        "sampleImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nftImageToUpload"
          },
          "title": "array of images from which nft should be referenced"
        },
        "nftMintRequest": {
          "$ref": "#/definitions/nftNFTMintRequest",
          "title": "mint request info"
        }
      },
      "title": "Images and request info for submitting nft"
    },
    "nftNFTMintRequestWithStatus": {
      "type": "object",
      "properties": {
        "sampleImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nftImageList"
          },
          "title": "array of images from which nft should be referenced"
        },
        "nftMintRequest": {
          "$ref": "#/definitions/nftNFTMintRequest",
          "title": "mint request info"
        },
        "status": {
          "$ref": "#/definitions/nftStatus",
          "title": "status"
        },
        "nftOffchainUrl": {
          "type": "string",
          "title": "resulted nft url uploaded offchain i.e to s3 can be empty"
        },
        "shipping": {
          "$ref": "#/definitions/nftShipping",
          "title": "related only if status is burned or shipped"
        }
      },
      "title": "NFT request as is with status"
    },
    "nftSetTrackingNumberRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "internai id"
        },
        "trackingNumber": {
          "type": "string",
          "title": "resulted nft raw image b64 encoded"
        }
      },
      "title": "SetTrackingNumberRequest update tracking number for shipping"
    },
    "nftShipping": {
      "type": "object",
      "properties": {
        "shipping": {
          "$ref": "#/definitions/nftShippingTo"
        },
        "trackingNumber": {
          "type": "string"
        }
      },
      "title": "Shipping info"
    },
    "nftShippingTo": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "title": "ShippingTo shipping info"
    },
    "nftStatus": {
      "type": "string",
      "enum": [
        "Any",
        "Unknown",
        "Pending",
        "Failed",
        "UploadedOffchain",
        "Uploaded",
        "Burned",
        "Shipped"
      ],
      "default": "Any",
      "description": "- Any: Anu used for query all mint requests aka \"*\"\n - Unknown: Unknown — status after user upload refs to ddapp tx is unconfirmed;\n - Pending: Pending — status after user upload refs to ddapp tx is  confirmed and art can be uploaded\n - Failed: Failed — status after user upload refs to ddapp tx is failed for some reason;\n - UploadedOffchain: UploadedOffchain — status after we draw art image and its ready to be uploaded to the blockchain;\n - Uploaded: Uploaded — art image is done and uploaded to the blockchain;\n - Burned: Burned — art image is  burned from blockchain and it ready to ship;\n - Shipped: Shipped — art image is  burned from blockchain and actual piece of art is shipped irl.",
      "title": "Status enum for mint request"
    },
    "nftUpdateNFTOffchainUrlRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "internai id"
        },
        "nftOffchainUrl": {
          "$ref": "#/definitions/nftImageToUpload",
          "title": "resulted nft raw image b64 encoded"
        }
      },
      "title": "Update NFT offchain url"
    },
    "nftUploadIPFSMetadataRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "internal db metadata id"
        }
      },
      "title": "Request for ploadIPFSMetadata"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  }
}
