syntax = "proto3";

package collection;
option go_package = "github.com/jekabolt/solutions-dapp/art-admin/metadata";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";



service Collections {
  rpc CreateNewCollection(CreateNewCollectionRequest) returns (CreateNewCollectionResponse) {
    option (google.api.http) = {
      post : "/api/collection/new"
      body : "*"
    };
  }

  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteCollectionResponse) {
    option (google.api.http) = {
      delete : "/api/collection/delete"
    };
  }

  rpc UpdateCollectionCapacity(UpdateCollectionCapacityRequest) returns (UpdateCollectionCapacityResponse) {
    option (google.api.http) = {
      post : "/api/collection/update/capacity"
      body : "*"
    };
  }

  rpc UpdateCollectionName(UpdateCollectionNameRequest) returns (UpdateCollectionNameResponse) {
    option (google.api.http) = {
      post : "/api/collection/update/name"
      body : "*"
    };
  }

  rpc GetAllCollections(google.protobuf.Empty) returns (GetAllCollectionsResponse) {
    option (google.api.http) = {
      get : "/api/collection/all"
    };
  }

  rpc GetCollectionByKey(GetCollectionByKeyRequest) returns (Collection) {
    option (google.api.http) = {
      get : "/api/collection/{key}"
    };
  }
  
}

// Request for CreateNewCollection
message CreateNewCollectionRequest {
    // collcection name
    string name = 1;
    // collection capacity
    int32 capacity = 2;
}


// Response for CreateNewCollection
message CreateNewCollectionResponse {
    // internal db collections id 
    string key = 1;
}

// Request for DeleteCollection
message DeleteCollectionRequest {
  // internal db collections id 
  string key = 1;
}

// Response for DeleteCollection
message DeleteCollectionResponse {
  // internal db collections id 
  string key = 1;
}





// Request for UpdateCollectionCapacity
message UpdateCollectionCapacityRequest  {
  // internal db collections id 
  string key = 1;
  // new capacity
  int32 capacity = 2;
}

// Response for UpdateCollectionCapacity
message UpdateCollectionCapacityResponse  {
  // internal db collections id 
  string key = 1;
}


// Request for UpdateCollectionName
message UpdateCollectionNameRequest  {
  // internal db collections id 
  string key = 1;
  // new collection name
  string name = 2;
}

// Response for UpdateCollectionName
message UpdateCollectionNameResponse  {
  // internal db collections id 
  string key = 1;
}


message GetAllCollectionsResponse {
  repeated Collection collections = 1;
}

// Request for GetCollectionByKey
message GetCollectionByKeyRequest  {
  // internal db collections id 
  string key = 1;
}

  

message Collection {
  // internal db collections id 
  string key = 1;
  // collection name
  string name = 2;
  // collection capacity
  int32 capacity = 3;
  // collection remained capacity
  int32 used = 4;
}