// Code generated by protoc-gen-typescript-http. DO NOT EDIT.
/* eslint-disable camelcase */

export type LoginRequest = {
  password: string | undefined;
};

export type LoginResponse = {
  authToken: string | undefined;
};

export interface Auth {
  Login(request: LoginRequest): Promise<LoginResponse>;
}

type RequestType = {
  path: string;
  method: string;
  body: string | null;
};

type RequestHandler = (request: RequestType) => Promise<unknown>;

export function createAuthClient(handler: RequestHandler): Auth {
  return {
    Login(request) {
      // eslint-disable-line @typescript-eslint/no-unused-vars
      const path = `api/auth/login`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += `?${queryParams.join('&')}`;
      }
      return handler({
        path: uri,
        method: 'POST',
        body,
      }) as Promise<LoginResponse>;
    },
  };
}

// @@protoc_insertion_point(typescript-http-eof)
